<!DOCTYPE html> 
<html> 
<head> 
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"> 
<title>Test Camera Overlay</title> 

<!-- REQUIRED scripts for ROS -->
<script type="text/javascript" src="js/jquery/jquery-latest.js"></script>
<script type="text/javascript" src="js/spidergl/spidergl.js"></script>
<script type="text/javascript" src="js/ros/ros.js"></script>
<script type="text/javascript" src="js/ros/common.js"></script>
<script type="text/javascript" src="js/ros/visualization/visualization.js"></script>

<script> 

// create a visualization manager
var vm

function onImageLoad() {
  var c = document.getElementById('WEBGL_CANVAS');
  var i = document.getElementById('CAMERA_IMAGE');
  c.width  = i.width;
  c.height = i.height;
}

function start()
{ 
  // create a rosjs node handle
  var node = new ros.NodeHandle("ws://localhost:9090");
  vm = new ros.visualization.VisualizationManager("WEBGL_CANVAS");

  // set handler for onClose event
  node.setOnClose(function(e) {
    ros_debug("Disconnected or Can't Connect.");
  });

  // set handler for onError event
  node.setOnError(function(e) {
    ros_debug("Unknown error!");
  });
  
  //set handler for onOpen event 
  node.setOnOpen(function(e) {
    // successfully connected to rosjs     
    ros_debug("Connected to " + node.url + ".");
    // create a transform listener that subscribes to /tf messages
    var tf = new ros.tf.TransformListener(node, "/tf"); 
    // initialize visualization manager
    vm.initialize(node, tf);
    // add visualization nodes here...
    vm.addRobotModel("resources/pr2_description/pr2_urdf.xml"); 
    var camera_overlay = new ros.visualization.CameraOverlay(vm, "/wide_stereo_optical_frame", "/wide_stereo/left/camera_info"); 
  });
  
}
</script> 

</head> 
<body onload="start()" style="margin:0;padding:0;background-white;overflow:hidden"> 
<img id="CAMERA_IMAGE" onload="onImageLoad()" src="http://merry:8080/stream?topic=/wide_stereo/left/image_rect_color?quality=30 alt="" />
<div style="position: absolute; top: 0px; width: 100%"> 
<canvas id="WEBGL_CANVAS" width="1000" height="600"></canvas> 
</div> 

</body> 
</html> 
