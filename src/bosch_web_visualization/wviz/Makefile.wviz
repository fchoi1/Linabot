all: wviz

export ROSJS_PATH=$(shell rospack find wviz)/www/js/ros
export JS_PATH=$(shell rospack find wviz)/www/js
export WVIZ_PATH=$(shell rospack find wviz)
export RESOURCE_PATH=$(shell rospack find wviz)/www/resources
export IMAGES_PATH=$(shell rospack find wviz)/www/images

create_rosjs_directory = \
      if ! test -d $(ROSJS_PATH) ; then \
        echo "  -- Creating include directory $(ROSJS_DIR)" ; \
        mkdir $(ROSJS_PATH) ; \
      fi; 

link_rosjs_common = \
	export dir=`rospack find rosjs_common`/js ; \
	echo "path $$dir" ; \
	for i in `ls $$dir` ; do \
			if test -f $$dir/$$i || test -d $$dir/$$i ; then \
				echo "  -- Sym-linking $$i to $(ROSJS_PATH)" ; \
				if test -f $(ROSJS_PATH)/$$i || test -d $(ROSJS_PATH)/$$i ; then \
					rm -rf $(ROSJS_PATH)/$$i ; \
				fi; \
				cp -r --force $$dir/$$i $(ROSJS_PATH)/$$i ; \
			fi; \
	done

link_rosjs_visualization = \
	export dir=`rospack find rosjs_visualization`/js ; \
	echo "path $$dir" ; \
	for i in `ls $$dir` ; do \
			if test -f $$dir/$$i || test -d $$dir/$$i ; then \
				echo "  -- Sym-linking $$i to $(ROSJS_PATH)" ; \
				if test -f $(ROSJS_PATH)/$$i || test -d $(ROSJS_PATH)/$$i ; then \
					rm -rf $(ROSJS_PATH)/$$i ; \
				fi; \
				cp -r --force $$dir/$$i $(ROSJS_PATH)/$$i ; \
			fi; \
	done

link_resources_js=\
	export dir=`rospack find rosjs_resources`/js ; \
	echo "path $$dir" ; \
	for i in `ls $$dir` ; do \
		if test -f $$dir/$$i || test -d $$dir/$$i ; then \
			echo "  -- Sym-linking $$i to $(JS_PATH)" ; \
			if test -f $(JS_PATH)/$$i || test -d $(JS_PATH)/$$i ; then \
				rm -rf $(JS_PATH)/$$i ; \
			fi; \
			 cp -r --force $$dir/$$i $(JS_PATH)/$$i ; \
		fi; \
     done


link_resources=\
	export dir=`rospack find rosjs_resources`/resources ; \
	echo "path $$dir" ; \
	for i in `ls $$dir` ; do \
		if test -f $$dir/$$i || test -d $$dir/$$i ; then \
			echo "  -- Sym-linking $$i to $(RESOURCE_PATH)" ; \
			if test -f  $(RESOURCE_PATH)/$$i || test -d $(RESOURCE_PATH)/$$i ; then \
				rm -rf $(RESOURCE_PATH)/$$i ; \
			fi; \
			cp -r --force $$dir/$$i $(RESOURCE_PATH)/$$i ; \
		fi;\
	done


link_images=\
	export dir=`rospack find rosjs_resources`/images ; \
	echo "path $$dir" ; \
	for i in `ls $$dir`; do \
		if test -f $$dir/$$i || test -d $$dir/$$i ; then \
			echo "  -- Sym-linking images to $(IMAGES_PATH)" ; \
			if test -f  $(IMAGES_PATH)/$$i || test -d $(IMAGES_PATH)/$$i ; then \
				rm -rf $(IMAGES_PATH)/$$i ; \
			fi; \
			cp -r --force $$dir/$$i $(IMAGES_PATH)/$$i ; \
		fi;\
	done

remove_all = \
	export dir=$(ROSJS_PATH) ; \
	echo "path $$dir" ; \
	for i in `ls $$dir` ; do \
			if test -f $$dir/$$i || test -d $$dir/$$i ; then \
				echo "  -- Un-linking $$i" ; \
				rm -rf $$dir/$$i ; \
			fi; \
	done 

wviz: 
								  $(create_rosjs_directory)
								  $(link_rosjs)
									$(link_rosjs_common)
									$(link_rosjs_visualization)
									$(link_rosjs_remotelabwidgets)
									$(link_resources_js)
									$(link_resources)
									$(link_images)						
clean:
									$(remove_all)

wipe: clean
