<launch>

<!-- Leg Detector -->

  <arg name="limit" default="0.2" />
  <param name="/leg_detector/leg_reliability_limit" value="$(arg limit)" type="double"/>
  <include file="$(find leg_detector)/launch/leg_detector.launch" />
  <node name="velocity_tracker" pkg="people_velocity_tracker" type="tracker.py" respawn="true" />


<!-- Robot pose ekf to launch odom_combined 

<node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
  <param name="output_frame" value="odom_combined"/>
  <param name="base_footprint_frame" value="base_footprint"/>
  <param name="freq" value="30.0"/>
  <param name="sensor_timeout" value="1.0"/>  
  <param name="odom_used" value="true"/>
  <param name="imu_used" value="true"/>
  <param name="vo_used" value="true"/>

  <remap from="odom" to="pr2_base_odometry/odom" />
</node>

-->






<!-- Rviz -->

  <node name="rviz" pkg="rviz" type="rviz" args="-d /home/ubuntu/workspace/src/rviz_config/linabot.rviz"/>






<!-- AMCL Navigation -->

  <!-- 3D sensor -->
  <arg name="3d_sensor" default="$(env TURTLEBOT_3D_SENSOR)"/>  <!-- r200, kinect, asus_xtion_pro -->
  <include file="$(find turtlebot_bringup)/launch/3dsensor.launch">
    <arg name="rgb_processing" value="false" />
    <arg name="depth_registration" value="false" />
    <arg name="depth_processing" value="false" />
    
    <!-- We must specify an absolute topic name because if not it will be prefixed by "$(arg camera)".
         Probably is a bug in the nodelet manager: https://github.com/ros/nodelet_core/issues/7 --> 
    <arg name="scan_topic" value="/scan" />
  </include>

  <!-- Map server -->
  <arg name="map_file" default="$(env TURTLEBOT_MAP_FILE)"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <!-- AMCL -->
  <arg name="custom_amcl_launch_file" default="$(find turtlebot_navigation)/launch/includes/amcl/$(arg 3d_sensor)_amcl.launch.xml"/>
  <arg name="initial_pose_x" default="-6.52"/> <!-- Use 17.0 for willow's map in simulation -->
  <arg name="initial_pose_y" default="9.3"/> <!-- Use 17.0 for willow's map in simulation -->
  <arg name="initial_pose_a" default="0.0"/>
  <include file="$(arg custom_amcl_launch_file)">
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
  </include>

  <!-- Move base -->
  <arg name="custom_param_file" default="$(find turtlebot_navigation)/param/$(arg 3d_sensor)_costmap_params.yaml"/>
  <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml">
    <arg name="custom_param_file" value="$(arg custom_param_file)"/>
  
  </include>





  <!-- Video Stream -->

  <arg name="camera_name" default="camera" />
  <!-- video_stream_provider can be a number as a video device or a url of a video stream -->
  <arg name="video_stream_provider" default="0" />
  <!-- frames per second to query the camera for -->
  <arg name="fps" default="30" />
  <!-- frame_id for the camera -->
  <arg name="frame_id" default="$(arg camera_name)" />

  <!-- By default, calibrations are stored to file://${ROS_HOME}/camera_info/${NAME}.yaml
  To use your own fill this arg with the corresponding url, e.g.:
  "file:///$(find your_camera_package)/config/your_camera.yaml" -->

  <arg name="camera_info_url" default="" />
  <!-- flip the image horizontally (mirror it) -->
  <arg name="flip_horizontal" default="false" />
  <!-- flip the image vertically -->
  <arg name="flip_vertical" default="false" />
  <!-- force width and height, 0 means no forcing -->
  <arg name="width" default="0"/>
  <arg name="height" default="0"/>
  <!-- if show a image_view window subscribed to the generated stream -->
  <arg name="visualize" default="false"/>
   
  <!-- images will be published at /camera_name/image with the image transports plugins (e.g.: compressed) installed -->
  <group ns="$(arg camera_name)">
  <node pkg="video_stream_opencv" type="video_stream" name="$(arg camera_name)_stream" output="screen"> 
  <remap from="camera" to="image_raw" />
  <param name="camera_name" type="string" value="$(arg camera_name)" />
  <param name="video_stream_provider" type="string" value="$(arg video_stream_provider)" />
  <param name="fps" type="int" value="$(arg fps)" />
  <param name="frame_id" type="string" value="$(arg frame_id)" />
  <param name="camera_info_url" type="string" value="$(arg camera_info_url)" />
  <param name="flip_horizontal" type="bool" value="$(arg flip_horizontal)" />
  <param name="flip_vertical" type="bool" value="$(arg flip_vertical)" />
  <param name="width" type="int" value="$(arg width)" />
  <param name="height" type="int" value="$(arg height)" />
  </node>

  <node if="$(arg visualize)" name="$(arg camera_name)_image_view" pkg="image_view" type="image_view">
  <remap from="image" to="image_raw" />
  </node>
  </group>




  <!-- Mjpeg Server -->
  <node name="mjpeg_server" pkg="mjpeg_server" type="mjpeg_server" />

  <!-- Mjpeg Server -->
  <node name="robot_pose_publisher" pkg="robot_pose_publisher" type="robot_pose_publisher" />


  <!-- Mjpeg Server -->
  <node name="tf2_web_republisher" pkg="tf2_web_republisher" type="tf2_web_republisher" />


  <!-- Rosbridge Websocket -->

  <arg name="port" default="9090" />
  <arg name="address" default="" />
  <arg name="ssl" default="false" />
  <arg name="certfile" default=""/>
  <arg name="keyfile" default="" />

  <arg name="retry_startup_delay" default="5" />

  <arg name="fragment_timeout" default="600" />
  <arg name="delay_between_messages" default="0" />
  <arg name="max_message_size" default="None" />

  <arg name="authenticate" default="false" />

  <arg name="topics_glob" default="[*]" />
  <arg name="services_glob" default="[*]" />
  <arg name="params_glob" default="[*]" />

  <group if="$(arg ssl)">
    <node name="rosbridge_websocket" pkg="rosbridge_server" type="rosbridge_websocket" output="screen">
      <param name="certfile" value="$(arg certfile)" />
      <param name="keyfile" value="$(arg keyfile)" />
      <param name="authenticate" value="$(arg authenticate)" />
      <param name="port" value="$(arg port)"/>
      <param name="address" value="$(arg address)"/>
      <param name="retry_startup_delay" value="$(arg retry_startup_delay)"/>
      <param name="fragment_timeout" value="$(arg fragment_timeout)"/>
      <param name="delay_between_messages" value="$(arg delay_between_messages)"/>
      <param name="max_message_size" value="$(arg max_message_size)"/>

      <param name="topics_glob" value="$(arg topics_glob)"/>
      <param name="services_glob" value="$(arg services_glob)"/>
      <param name="params_glob" value="$(arg params_glob)"/>
    </node>
  </group>
  <group unless="$(arg ssl)">
    <node name="rosbridge_websocket" pkg="rosbridge_server" type="rosbridge_websocket" output="screen">
      <param name="authenticate" value="$(arg authenticate)" />
      <param name="port" value="$(arg port)"/>
      <param name="address" value="$(arg address)"/>
      <param name="retry_startup_delay" value="$(arg retry_startup_delay)"/>
      <param name="fragment_timeout" value="$(arg fragment_timeout)"/>
      <param name="delay_between_messages" value="$(arg delay_between_messages)"/>
      <param name="max_message_size" value="$(arg max_message_size)"/>
      
      <param name="topics_glob" value="$(arg topics_glob)"/>
      <param name="services_glob" value="$(arg services_glob)"/>
      <param name="params_glob" value="$(arg params_glob)"/>
    </node>
  </group>

  <node name="rosapi" pkg="rosapi" type="rosapi_node">
    <param name="topics_glob" value="$(arg topics_glob)"/>
    <param name="services_glob" value="$(arg services_glob)"/>
    <param name="params_glob" value="$(arg params_glob)"/>
  </node>


</launch>
